[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "github-pr-bot"
version = "1.0.0"
authors = [
    {name = "Jacob Samell", email = "jacob@jacsamell.com"},
]
maintainers = [
    {name = "Jacob Samell", email = "jacob@jacsamell.com"},
]
description = "GitHub PR Bot - Automated PR analysis, review, and approval using Claude AI. Modified version of PR-Agent."
readme = "README.md"
license = {text = "AGPL-3.0"}
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Quality Assurance",
    "License :: OSI Approved :: GNU Affero General Public License v3",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
keywords = ["github", "pull-request", "code-review", "ai", "claude", "automation"]
dependencies = [
    "anthropic>=0.25.0",
    "PyGithub>=1.59.0",
    "pydantic>=2.0.0",
    "pyyaml>=6.0",
    "toml>=0.10.2",
    "requests>=2.28.0",
    "gitpython>=3.1.0",
    "jinja2>=3.1.0",
    "tiktoken>=0.4.0",
]

[project.urls]
"Homepage" = "https://github.com/jacsamell/github-pr-bot"
"Bug Reports" = "https://github.com/jacsamell/github-pr-bot/issues"
"Source" = "https://github.com/jacsamell/github-pr-bot"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]

[project.scripts]
github-pr-bot = "pr_agent.cli:run"

[tool.setuptools.packages.find]
where = ["."]
include = ["pr_agent*"]

[tool.setuptools.package-data]
"pr_agent" = ["settings/*.toml", "settings/*.yaml"]

[tool.black]
line-length = 120
target-version = ['py310']

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

[tool.ruff]
line-length = 120

lint.select = [
  "E",    # Pyflakes
  "F",    # Pyflakes
  "B",    # flake8-bugbear
  "I001", # isort basic checks
  "I002", # isort missing-required-import
]

# First commit - only fixing isort
lint.fixable = [
  "I001", # isort basic checks
]

lint.unfixable = [
  "B", # Avoid trying to fix flake8-bugbear (`B`) violations.
]

lint.exclude = ["api/code_completions"]

lint.ignore = ["E999", "B008"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
  "E402",
] # Ignore `E402` (import violations) in all `__init__.py` files, and in `path/to/file.py`.

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101"]
tests = []
